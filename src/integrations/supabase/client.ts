
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://uiivxkkmgojxajaohrrn.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVpaXZ4a2ttZ29qeGFqYW9ocnJuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc1MjI1NzgsImV4cCI6MjA2MzA5ODU3OH0.XJjIQxSFwb9GEnaGswfWImuC5WDQN0IeGopjYGPEBEs";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      storage: localStorage
    }
  }
);

// Types for the admin user creation function
type AdminUserCreationResult = {
  data?: {
    email: string;
    password: string;
    message: string;
  } | null;
  error?: any;
  message?: string;
};

// إنشاء مستخدم مسؤول جديد
export const createAdminUser = async (): Promise<AdminUserCreationResult> => {
  try {
    const { data: existingAdmin, error: checkError } = await supabase
      .from('profiles')
      .select('*')
      .eq('role', 'admin')
      .single();
    
    if (checkError && checkError.code !== 'PGRST116') {
      console.error("خطأ في التحقق من المسؤولين الحاليين:", checkError);
      return { error: checkError };
    }
    
    // إذا كان هناك مسؤول بالفعل، لا تقم بإنشاء واحد جديد
    if (existingAdmin) {
      console.log("يوجد مسؤول بالفعل");
      return { data: null, message: "يوجد مسؤول بالفعل" };
    }

    // إنشاء مستخدم مسؤول جديد
    const adminEmail = "admin@agri-consultant.com";
    const adminPassword = "Admin123456";
    
    const { data: signUpData, error: signUpError } = await supabase.auth.signUp({
      email: adminEmail,
      password: adminPassword,
      options: {
        data: {
          first_name: "المسؤول",
          last_name: "الرئيسي",
          role: "admin"
        }
      }
    });
    
    if (signUpError) {
      console.error("خطأ في إنشاء حساب المسؤول:", signUpError);
      return { error: signUpError };
    }
    
    // تحديث دور المستخدم إلى مسؤول في جدول الملفات الشخصية
    if (signUpData?.user) {
      const { error: updateError } = await supabase
        .from('profiles')
        .update({ role: 'admin' })
        .eq('id', signUpData.user.id);
      
      if (updateError) {
        console.error("خطأ في تحديث دور المسؤول:", updateError);
        return { error: updateError };
      }
    }
    
    return { 
      data: { 
        email: adminEmail, 
        password: adminPassword,
        message: "تم إنشاء حساب المسؤول بنجاح" 
      } 
    };
  } catch (error) {
    console.error("خطأ غير متوقع:", error);
    return { error };
  }
};
